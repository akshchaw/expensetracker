{"version":3,"sources":["components/Expenses/ExpensesFilter.jsx","components/UI/Card.jsx","components/Expenses/ExpenseDate.jsx","components/Expenses/ExpenseItem.jsx","components/Expenses/ExpensesList.jsx","components/Chart/ChartBar.jsx","components/Chart/Chart.jsx","components/Expenses/ExpensesChart.jsx","components/Expenses/Expenses.jsx","components/NewExpense/ExpenseForm.jsx","components/NewExpense/NewExpense.jsx","App.js","index.js"],"names":["ExpensesFilter","props","className","onChange","event","onSelectedYear","target","value","selectedYear","Card","classes","children","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","entry","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDatapoints","expenses","expense","getMonth","Expenses","useState","filterYear","setFilterYear","filteredExpenses","filter","toString","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","onCancelClick","type","min","step","onClick","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.6ccb4edd.chunk.js","sourcesContent":["import './ExpensesFilter.css';\n\nconst ExpensesFilter = (props) => {\n\n    const yearChangeHandler = event => {\n        props.onSelectedYear(event.target.value)\n    }\n\n    return (\n        <div className='expenses-filter'>\n            <div className='expenses-filter__control'>\n                <label>Filter by year</label>\n                <select onChange={yearChangeHandler} value={props.selectedYear}>\n                    <option value='2022'>2022</option>\n                    <option value='2021'>2021</option>\n                    <option value='2020'>2020</option>\n                    <option value='2019'>2019</option>\n                </select>\n            </div>\n        </div>\n    );\n};\n\nexport default ExpensesFilter;","import './Card.css'\n\nconst Card = (props) => {\n    const classes = 'card ' + props.className // to get the class name set by us in custom component\n    return <div className={classes}>{props.children}</div>\n}\n\nexport default Card;","import './ExpenseDate.css'\n\nconst ExpenseDate = (props) => {\n\n    const month = props.date.toLocaleString('en-US', {month: 'long'});\n    const day = props.date.toLocaleString('en-US', {day: '2-digit'});\n    const year = props.date.getFullYear();\n\n    return (\n        <div className='expense-date'>\n            <div className='expense-date__month'>{month}</div>\n            <div className='expense-date__year'>{year}</div>\n            <div className='expense-date__day'>{day}</div>\n        </div>\n    )\n}\n\nexport default ExpenseDate","import React from \"react\";\nimport ExpenseDate from './ExpenseDate'\nimport Card from \"../UI/Card\";\nimport \"./ExpenseItem.css\";\n\nconst ExpenseItem = (props) => {\n\n    return (\n        <Card className=\"expense-item\">\n            <ExpenseDate date={props.date}/>\n            <div className=\"expense-item__description\">\n                <h2>{props.title}</h2>\n                <div className=\"expense-item__price\">${props.amount}</div>\n            </div>\n        </Card>\n    );\n}\n\nexport default ExpenseItem;\n","import ExpenseItem from \"./ExpenseItem\";\nimport './ExpensesList.css'\n\nconst ExpensesList = props => {\n\n    if (props.items.length === 0) {\n        return <h2 className=\"expenses-list__fallback\">No expenses found</h2>\n    }\n    return <ul className=\"expenses-list\">\n        <li>\n            {props.items.map(entry =>\n                <ExpenseItem key={entry.id} title={entry.title} date={entry.date} amount={entry.amount}/>)}\n        </li>\n    </ul>;\n}\nexport default ExpensesList","import './ChartBar.css'\n\nconst ChartBar = props => {\n    let barFillHeight = '0%'\n    if (props.maxValue > 0) {\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%'\n    }\n    return <div className='chart-bar'>\n        <div className='chart-bar__inner'>\n            <div className='chart-bar__fill' style={{height: barFillHeight}}></div>\n        </div>\n        <div className='chart-bar__label'>{props.label}</div>\n    </div>\n}\n\nexport default ChartBar","import './Chart.css'\nimport ChartBar from './ChartBar'\n\nconst Chart = props => {\n\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\n    const totalMaximum = Math.max(...dataPointValues)\n\n    return <div className=\"chart\">\n        {\n            props.dataPoints.map(dataPoint =>\n                <ChartBar\n                    key={dataPoint.id}\n                    value={dataPoint.value}\n                    maxValue={totalMaximum}\n                    label={dataPoint.label}/>\n            )}\n    </div>\n}\n\nexport default Chart","import Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = props => {\n    const chartDatapoints = [\n        {label: 'Jan', value: 0},\n        {label: 'Feb', value: 0},\n        {label: 'Mar', value: 0},\n        {label: 'Apr', value: 0},\n        {label: 'May', value: 0},\n        {label: 'Jun', value: 0},\n        {label: 'Jul', value: 0},\n        {label: 'Aug', value: 0},\n        {label: 'Sep', value: 0},\n        {label: 'Oct', value: 0},\n        {label: 'Nov', value: 0},\n        {label: 'Dec', value: 0},\n    ]\n\n    for (const expense of props.expenses) {\n        const expenseMonth = expense.date.getMonth();\n        chartDatapoints[expenseMonth].value += expense.amount;\n    }\n\n    return <Chart dataPoints={chartDatapoints}/>\n}\n\nexport default ExpensesChart","import ExpensesFilter from \"./ExpensesFilter\";\nimport Card from \"../UI/Card\";\nimport './Expenses.css'\nimport {useState} from \"react\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\n\nconst Expenses = (props) => {\n\n    const [filterYear, setFilterYear] = useState('2020')\n\n    const onExpenseFilterHandler = selectedYear => {\n        setFilterYear(selectedYear)\n    }\n\n    const filteredExpenses = props.expenses.filter(expense => {\n        return expense.date.getFullYear().toString() === filterYear\n    })\n\n    return (\n        <div>\n            <Card className='expenses'>\n                <ExpensesFilter selectedYear={filterYear} onSelectedYear={onExpenseFilterHandler}/>\n                <ExpensesChart expenses={filteredExpenses}/>\n                <ExpensesList items={filteredExpenses}/>\n            </Card>\n        </div>\n    )\n}\n\nexport default Expenses;","import {useState} from \"react\";\nimport './ExpenseForm.css'\n\nconst ExpenseForm = (props) => {\n\n    const [enteredTitle, setEnteredTitle] = useState('');\n    const [enteredAmount, setEnteredAmount] = useState('');\n    const [enteredDate, setEnteredDate] = useState('');\n\n    // The alternative approach to combine all in one state\n    // const [userInput, setUserInput] = useState({\n    //     enteredTitle: '',\n    //     enteredDate: '',\n    //     enteredAmount: '',\n    // })\n\n    const titleChangeHandler = event => {\n        // setUserInput((prevState) => {\n        //     return {\n        //         ...prevState,\n        //         enteredTitle: event.target.value,\n        //     }\n        // })\n        setEnteredTitle(event.target.value);\n    }\n\n    const amountChangeHandler = event => {\n        // setUserInput((prevState) => {\n        //     return {\n        //         ...prevState,\n        //         enteredAmount: event.target.value\n        //     }\n        // })\n        setEnteredAmount(event.target.value);\n    }\n\n    const dateChangeHandler = event => {\n        // setUserInput((prevState) => {\n        //     return {\n        //         ...prevState,\n        //         enteredDate: event.target.value\n        //     }\n        // })\n        setEnteredDate(event.target.value);\n    }\n\n    const submitHandler = (event) => {\n        event.preventDefault(); //to not refresh the values when clicking on submit\n        const expenseData = {\n            title: enteredTitle,\n            amount: +enteredAmount,\n            date: new Date(enteredDate),\n        }\n        props.onSaveExpenseData(expenseData);\n        props.onCancelClick()\n        setEnteredDate('')\n        setEnteredTitle('')\n        setEnteredAmount('')\n    }\n\n    return (\n        <form onSubmit={submitHandler}>\n            <div className='new-expense__controls'>\n                <div className='new-expense__control'>\n                    <label>Title</label>\n                    <input type='text' value={enteredTitle} onChange={titleChangeHandler}/>\n                </div>\n                <div className='new-expense__control'>\n                    <label>Amount</label>\n                    <input type='number' min='0.01' step='0.01' value={enteredAmount}\n                           onChange={amountChangeHandler}/>\n                </div>\n                <div className='new-expense__control'>\n                    <label>Date</label>\n                    <input type='date' min='2019-01-01' max='2022-12-31' value={enteredDate}\n                           onChange={dateChangeHandler}/>\n                </div>\n            </div>\n            <div className='new-expense__actions'>\n                <button type='cancel' onClick={props.onCancelClick}>Cancel</button>\n                <button type='submit'>Add expense</button>\n            </div>\n        </form>\n    )\n};\n\nexport default ExpenseForm","import './NewExpense.css'\nimport ExpenseForm from \"./ExpenseForm\";\nimport {useState} from \"react\";\n\nconst NewExpense = (props) => {\n\n    const [isEditing, setIsEditing] = useState(false)\n\n    const saveExpenseDataHandler = (enteredExpenseData) => {\n        const expenseData = {\n            ...enteredExpenseData,\n            id: Math.random().toString()\n        }\n        props.onAddExpense(expenseData)\n    }\n\n    const startIsEditingHandler = () => {\n        setIsEditing(true)\n    }\n\n    const stopIsEditingHandler = () => {\n        setIsEditing(false)\n    }\n\n    return (\n        <div className='new-expense'>\n            {!isEditing && (\n                <button className='new-expense__actions' onClick={startIsEditingHandler}>Add new Expense</button>)}\n            {isEditing && (\n                <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancelClick={stopIsEditingHandler}/>)}\n        </div>\n    )\n}\n\nexport default NewExpense;","import Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport {useState} from \"react\";\n\nconst DUMMY_EXPENSES = [\n    {\n        id: \"e1\",\n        title: \"Toilet Paper\",\n        amount: 94.12,\n        date: new Date(2020, 7, 14),\n    },\n    {\n        id: \"e2\",\n        title: \"New Television\",\n        amount: 799.49,\n        date: new Date(2021, 2, 12),\n    },\n    {\n        id: \"e3\",\n        title: \"Car Insurance\",\n        amount: 294.67,\n        date: new Date(2021, 2, 28),\n    },\n    {\n        id: \"e4\",\n        title: \"New Desk (Wooden)\",\n        amount: 450,\n        date: new Date(2021, 5, 12),\n    },\n];\n\nconst App = () => {\n\n    const [expenses,setExpenses] = useState(DUMMY_EXPENSES);\n\n    const addExpenseHandler = expense => {\n        setExpenses(prevExpenses => {\n            return [expense,...prevExpenses];\n        })\n    }\n\n    return (\n        <div>\n            <NewExpense onAddExpense={addExpenseHandler}/>\n            <Expenses expenses={expenses}/>\n        </div>\n    );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}