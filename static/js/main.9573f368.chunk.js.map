{"version":3,"sources":["components/Expenses/ExpenseDate.jsx","components/UI/Card.jsx","components/Expenses/ExpenseItem.jsx","components/Expenses/ExpensesFilter.jsx","components/Expenses/Expenses.jsx","components/NewExpense/ExpenseForm.jsx","components/NewExpense/NewExpense.jsx","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","useState","title","setTitle","amount","onClick","console","log","ExpensesFilter","onChange","event","onSelectedYear","target","value","selectedYear","Expenses","expenses","filterYear","setFilterYear","map","entry","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","max","NewExpense","enteredExpenseData","id","Math","random","toString","onAddExpense","App","expense","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.9573f368.chunk.js","sourcesContent":["import './ExpenseDate.css'\n\nconst ExpenseDate = (props) => {\n\n    const month = props.date.toLocaleString('en-US', {month: 'long'});\n    const day = props.date.toLocaleString('en-US', {day: '2-digit'});\n    const year = props.date.getFullYear();\n\n    return (\n        <div className='expense-date'>\n            <div className='expense-date__month'>{month}</div>\n            <div className='expense-date__year'>{year}</div>\n            <div className='expense-date__day'>{day}</div>\n        </div>\n    )\n}\n\nexport default ExpenseDate","import './Card.css'\n\nconst Card = (props) => {\n    const classes = 'card ' + props.className // to get the class name set by us in custom component\n    return <div className={classes}>{props.children}</div>\n}\n\nexport default Card;","import React, {useState} from \"react\";\nimport ExpenseDate from './ExpenseDate'\nimport Card from \"../UI/Card\";\nimport \"./ExpenseItem.css\";\n\nconst ExpenseItem = (props) => {\n\n    const [title, setTitle] = useState(props.title);\n\n    const clickHandler = () => {\n        setTitle('updated')\n        console.log(title)\n    }\n\n    return (\n        <Card className=\"expense-item\">\n            <ExpenseDate date={props.date}/>\n            <div className=\"expense-item__description\">\n                <h2>{title}</h2>\n                <div className=\"expense-item__price\">${props.amount}</div>\n                <button onClick={clickHandler}>Change Title</button>\n            </div>\n        </Card>\n    );\n}\n\nexport default ExpenseItem;\n","import './ExpensesFilter.css';\n\nconst ExpensesFilter = (props) => {\n\n    const yearChangeHandler = event => {\n        props.onSelectedYear(event.target.value)\n    }\n\n    return (\n        <div className='expenses-filter'>\n            <div className='expenses-filter__control'>\n                <label>Filter by year</label>\n                <select onChange={yearChangeHandler} value={props.selectedYear}>\n                    <option value='2022'>2022</option>\n                    <option value='2021'>2021</option>\n                    <option value='2020'>2020</option>\n                    <option value='2019'>2019</option>\n                </select>\n            </div>\n        </div>\n    );\n};\n\nexport default ExpensesFilter;","import ExpenseItem from \"./ExpenseItem\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport Card from \"../UI/Card\";\nimport './Expenses.css'\nimport {useState} from \"react\";\n\nconst Expenses = (props) => {\n\n    let expenses = props.expenses\n    const [filterYear, setFilterYear] = useState('2020')\n\n    const onExpenseFilterHandler = selectedYear => {\n        setFilterYear(selectedYear)\n\n    }\n\n    return (\n        <div>\n            <Card className='expenses'>\n                <ExpensesFilter selectedYear={filterYear} onSelectedYear={onExpenseFilterHandler}/>\n                {expenses.map(entry => {\n                    return <ExpenseItem title={entry.title} date={entry.date} amount={entry.amount}/>\n                })}\n            </Card>\n        </div>\n    )\n}\n\nexport default Expenses;","import {useState} from \"react\";\nimport './ExpenseForm.css'\n\nconst ExpenseForm = (props) => {\n\n    const [enteredTitle, setEnteredTitle] = useState('');\n    const [enteredAmount, setEnteredAmount] = useState('');\n    const [enteredDate, setEnteredDate] = useState('');\n\n    // The alternative approach to combine all in one state\n    // const [userInput, setUserInput] = useState({\n    //     enteredTitle: '',\n    //     enteredDate: '',\n    //     enteredAmount: '',\n    // })\n\n    const titleChangeHandler = event => {\n        // setUserInput((prevState) => {\n        //     return {\n        //         ...prevState,\n        //         enteredTitle: event.target.value,\n        //     }\n        // })\n        setEnteredTitle(event.target.value);\n    }\n\n    const amountChangeHandler = event => {\n        // setUserInput((prevState) => {\n        //     return {\n        //         ...prevState,\n        //         enteredAmount: event.target.value\n        //     }\n        // })\n        setEnteredAmount(event.target.value);\n    }\n\n    const dateChangeHandler = event => {\n        // setUserInput((prevState) => {\n        //     return {\n        //         ...prevState,\n        //         enteredDate: event.target.value\n        //     }\n        // })\n        setEnteredDate(event.target.value);\n    }\n\n    const submitHandler = (event) => {\n        event.preventDefault(); //to not refresh the values when clicking on submit\n        const expenseData = {\n            title: enteredTitle,\n            amount: enteredAmount,\n            date: new Date(enteredDate),\n        }\n        props.onSaveExpenseData(expenseData);\n        setEnteredDate('')\n        setEnteredTitle('')\n        setEnteredAmount('')\n    }\n\n    return (\n        <form onSubmit={submitHandler}>\n            <div className='new-expense__controls'>\n                <div className='new-expense__control'>\n                    <label>Title</label>\n                    <input type='text' value={enteredTitle} onChange={titleChangeHandler}/>\n                </div>\n                <div className='new-expense__control'>\n                    <label>Amount</label>\n                    <input type='number' min='0.01' step='0.01' value={enteredAmount} onChange={amountChangeHandler}/>\n                </div>\n                <div className='new-expense__control'>\n                    <label>Date</label>\n                    <input type='date' min='2019-01-01' max='2022-12-31' value={enteredDate}\n                           onChange={dateChangeHandler}/>\n                </div>\n            </div>\n            <div className='new-expense__actions'>\n                <button type='submit'>Add expense</button>\n            </div>\n        </form>\n    )\n};\n\nexport default ExpenseForm","import './NewExpense.css'\nimport ExpenseForm from \"./ExpenseForm\";\n\nconst NewExpense = (props) => {\n\n    const saveExpenseDataHandler = (enteredExpenseData) => {\n        const expenseData = {\n            ...enteredExpenseData,\n            id: Math.random().toString()\n        }\n        props.onAddExpense(expenseData)\n    }\n\n    return (\n        <div className='new-expense'>\n            <ExpenseForm onSaveExpenseData={saveExpenseDataHandler}/>\n        </div>\n    )\n}\n\nexport default NewExpense;","import Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst App = () => {\n    const expenses = [\n        {\n            id: \"e1\",\n            title: \"Toilet Paper\",\n            amount: 94.12,\n            date: new Date(2020, 7, 14),\n        },\n        {\n            id: \"e2\",\n            title: \"New Television\",\n            amount: 799.49,\n            date: new Date(2021, 2, 12),\n        },\n        {\n            id: \"e3\",\n            title: \"Car Insurance\",\n            amount: 294.67,\n            date: new Date(2021, 2, 28),\n        },\n        {\n            id: \"e4\",\n            title: \"New Desk (Wooden)\",\n            amount: 450,\n            date: new Date(2021, 5, 12),\n        },\n    ];\n\n    const addExpenseHandler = expense => {\n        console.log(expense)\n    }\n\n    return (\n        <div>\n            <NewExpense onAddExpense={addExpenseHandler}/>\n            <Expenses expenses={expenses}/>\n        </div>\n    );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}